
package org.apache.ode.pmapi;

import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.jws.soap.SOAPBinding;
import javax.xml.bind.annotation.XmlSeeAlso;
import org.apache.ode.pmapi.types._2006._08._02.GetCommunication;
import org.apache.ode.pmapi.types._2006._08._02.GetCommunicationResponse;
import org.apache.ode.pmapi.types._2006._08._02.Replay;
import org.apache.ode.pmapi.types._2006._08._02.ReplayResponse;
import org.apache.ode.pmapi.types._2006._08._02.TEventInfoList;
import org.apache.ode.pmapi.types._2006._08._02.TInstanceInfo;
import org.apache.ode.pmapi.types._2006._08._02.TInstanceInfoList;
import org.apache.ode.pmapi.types._2006._08._02.TScopeInfo;
import org.apache.ode.pmapi.types._2006._08._02.TVariableInfo;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.4-b01
 * Generated source version: 2.2
 * 
 */
@WebService(name = "InstanceManagementPortType", targetNamespace = "http://www.apache.org/ode/pmapi")
@SOAPBinding(style = SOAPBinding.Style.RPC)
@XmlSeeAlso({
    org.apache.ode.pmapi.types._2006._08._02.ObjectFactory.class,
    org.apache.ode.pmapi.ObjectFactory.class
})
public interface InstanceManagementPortType {


    /**
     * 
     * @param limit
     * @param order
     * @param filter
     * @return
     *     returns org.apache.ode.pmapi.types._2006._08._02.TInstanceInfoList
     * @throws ManagementFault
     */
    @WebMethod
    @WebResult(name = "instance-info-list", partName = "instance-info-list")
    public TInstanceInfoList listInstances(
        @WebParam(name = "filter", partName = "filter")
        String filter,
        @WebParam(name = "order", partName = "order")
        String order,
        @WebParam(name = "limit", partName = "limit")
        int limit)
        throws ManagementFault
    ;

    /**
     * 
     * @param limit
     * @param order
     * @param filter
     * @return
     *     returns org.apache.ode.pmapi.types._2006._08._02.TInstanceInfoList
     * @throws ManagementFault
     */
    @WebMethod
    @WebResult(name = "instance-info-list", partName = "instance-info-list")
    public TInstanceInfoList listInstancesSummary(
        @WebParam(name = "filter", partName = "filter")
        String filter,
        @WebParam(name = "order", partName = "order")
        String order,
        @WebParam(name = "limit", partName = "limit")
        int limit)
        throws ManagementFault
    ;

    /**
     * 
     * @param payload
     * @return
     *     returns org.apache.ode.pmapi.types._2006._08._02.TInstanceInfoList
     * @throws ManagementFault
     */
    @WebMethod
    @WebResult(name = "instance-info-list", partName = "instance-info-list")
    public TInstanceInfoList queryInstances(
        @WebParam(name = "payload", partName = "payload")
        String payload)
        throws ManagementFault
    ;

    /**
     * 
     * @return
     *     returns org.apache.ode.pmapi.types._2006._08._02.TInstanceInfoList
     * @throws ManagementFault
     */
    @WebMethod
    @WebResult(name = "instance-info-list", partName = "instance-info-list")
    public TInstanceInfoList listAllInstances()
        throws ManagementFault
    ;

    /**
     * 
     * @param payload
     * @return
     *     returns org.apache.ode.pmapi.types._2006._08._02.TInstanceInfoList
     * @throws ManagementFault
     */
    @WebMethod
    @WebResult(name = "instance-info-list", partName = "instance-info-list")
    public TInstanceInfoList listAllInstancesWithLimit(
        @WebParam(name = "payload", partName = "payload")
        int payload)
        throws ManagementFault
    ;

    /**
     * 
     * @param iid
     * @return
     *     returns org.apache.ode.pmapi.types._2006._08._02.TInstanceInfo
     * @throws ManagementFault
     */
    @WebMethod
    @WebResult(name = "instance-info", partName = "instance-info")
    public TInstanceInfo getInstanceInfo(
        @WebParam(name = "iid", partName = "iid")
        long iid)
        throws ManagementFault
    ;

    /**
     * 
     * @param siid
     * @return
     *     returns org.apache.ode.pmapi.types._2006._08._02.TScopeInfo
     * @throws ManagementFault
     */
    @WebMethod
    @WebResult(name = "scope-info", partName = "scope-info")
    public TScopeInfo getScopeInfo(
        @WebParam(name = "siid", partName = "siid")
        long siid)
        throws ManagementFault
    ;

    /**
     * 
     * @param sid
     * @param activityInfo
     * @return
     *     returns org.apache.ode.pmapi.types._2006._08._02.TScopeInfo
     * @throws ManagementFault
     */
    @WebMethod
    @WebResult(name = "scope-info", partName = "scope-info")
    public TScopeInfo getScopeInfoWithActivity(
        @WebParam(name = "sid", partName = "sid")
        long sid,
        @WebParam(name = "activityInfo", partName = "activityInfo")
        boolean activityInfo)
        throws ManagementFault
    ;

    /**
     * 
     * @param sid
     * @param varName
     * @return
     *     returns org.apache.ode.pmapi.types._2006._08._02.TVariableInfo
     * @throws ManagementFault
     */
    @WebMethod
    @WebResult(name = "scope-info", partName = "scope-info")
    public TVariableInfo getVariableInfo(
        @WebParam(name = "sid", partName = "sid")
        String sid,
        @WebParam(name = "varName", partName = "varName")
        String varName)
        throws ManagementFault
    ;

    /**
     * 
     * @param maxCount
     * @param eventFilter
     * @param instanceFilter
     * @return
     *     returns org.apache.ode.pmapi.types._2006._08._02.TEventInfoList
     * @throws ManagementFault
     */
    @WebMethod
    @WebResult(name = "bpel-event-list", partName = "bpel-event-list")
    public TEventInfoList listEvents(
        @WebParam(name = "instanceFilter", partName = "instanceFilter")
        String instanceFilter,
        @WebParam(name = "eventFilter", partName = "eventFilter")
        String eventFilter,
        @WebParam(name = "maxCount", partName = "maxCount")
        int maxCount)
        throws ManagementFault
    ;

    /**
     * 
     * @param eventFilter
     * @param instanceFilter
     * @return
     *     returns org.apache.ode.pmapi.ListType
     * @throws ManagementFault
     */
    @WebMethod
    @WebResult(name = "dates", partName = "dates")
    public ListType getEventTimeline(
        @WebParam(name = "instanceFilter", partName = "instanceFilter")
        String instanceFilter,
        @WebParam(name = "eventFilter", partName = "eventFilter")
        String eventFilter)
        throws ManagementFault
    ;

    /**
     * 
     * @param iid
     * @return
     *     returns org.apache.ode.pmapi.types._2006._08._02.TInstanceInfo
     * @throws ManagementFault
     */
    @WebMethod
    @WebResult(name = "instance-info", partName = "instance-info")
    public TInstanceInfo suspend(
        @WebParam(name = "iid", partName = "iid")
        long iid)
        throws ManagementFault
    ;

    /**
     * 
     * @param iid
     * @return
     *     returns org.apache.ode.pmapi.types._2006._08._02.TInstanceInfo
     * @throws ManagementFault
     */
    @WebMethod
    @WebResult(name = "instance-info", partName = "instance-info")
    public TInstanceInfo resume(
        @WebParam(name = "iid", partName = "iid")
        long iid)
        throws ManagementFault
    ;

    /**
     * 
     * @param iid
     * @return
     *     returns org.apache.ode.pmapi.types._2006._08._02.TInstanceInfo
     * @throws ManagementFault
     */
    @WebMethod
    @WebResult(name = "instance-info", partName = "instance-info")
    public TInstanceInfo terminate(
        @WebParam(name = "iid", partName = "iid")
        long iid)
        throws ManagementFault
    ;

    /**
     * 
     * @param iid
     * @return
     *     returns org.apache.ode.pmapi.types._2006._08._02.TInstanceInfo
     * @throws ManagementFault
     */
    @WebMethod
    @WebResult(name = "instance-info", partName = "instance-info")
    public TInstanceInfo terminateRecursive(
        @WebParam(name = "iid", partName = "iid")
        long iid)
        throws ManagementFault
    ;

    /**
     * 
     * @param iid
     * @return
     *     returns org.apache.ode.pmapi.types._2006._08._02.TInstanceInfo
     * @throws ManagementFault
     */
    @WebMethod
    @WebResult(name = "instance-info", partName = "instance-info")
    public TInstanceInfo fault(
        @WebParam(name = "iid", partName = "iid")
        long iid)
        throws ManagementFault
    ;

    /**
     * 
     * @param filter
     * @return
     *     returns org.apache.ode.pmapi.ListType
     * @throws ManagementFault
     */
    @WebMethod
    @WebResult(name = "list", partName = "list")
    public ListType delete(
        @WebParam(name = "filter", partName = "filter")
        String filter)
        throws ManagementFault
    ;

    /**
     * 
     * @param iid
     * @param action
     * @param aid
     * @return
     *     returns org.apache.ode.pmapi.types._2006._08._02.TInstanceInfo
     * @throws ManagementFault
     */
    @WebMethod
    @WebResult(name = "instance-info", partName = "instance-info")
    public TInstanceInfo recoverActivity(
        @WebParam(name = "iid", partName = "iid")
        long iid,
        @WebParam(name = "aid", partName = "aid")
        long aid,
        @WebParam(name = "action", partName = "action")
        String action)
        throws ManagementFault
    ;

    /**
     * 
     * @param replay
     * @return
     *     returns org.apache.ode.pmapi.types._2006._08._02.ReplayResponse
     * @throws ManagementFault
     */
    @WebMethod
    @WebResult(name = "replayResponse", partName = "replayResponse")
    public ReplayResponse replay(
        @WebParam(name = "replay", partName = "replay")
        Replay replay)
        throws ManagementFault
    ;

    /**
     * 
     * @param getCommunication
     * @return
     *     returns org.apache.ode.pmapi.types._2006._08._02.GetCommunicationResponse
     * @throws ManagementFault
     */
    @WebMethod
    @WebResult(name = "getCommunicationResponse", partName = "getCommunicationResponse")
    public GetCommunicationResponse getCommunication(
        @WebParam(name = "getCommunication", partName = "getCommunication")
        GetCommunication getCommunication)
        throws ManagementFault
    ;

}
